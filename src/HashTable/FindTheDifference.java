/**
 *
 */
package HashTable;

/**
 * Given two strings s and t which consist of only lowercase letters.
 * String t is generated by random shuffling string s and then add one more letter at a random position.
 * Find the letter that was added in t.
 * Example:
 *
 * Input:
 * s = "abcd"
 * t = "abcde"
 *
 * Output;
 * e
 *
 * Explanation:
 * 'e' is the letter that was added.
 * @author SenWang
 *
 */
public class FindTheDifference {
    /**
     * This is my own solution to this question, which uses array
     * to remember the lower case letter we have come across.
     * @param s the first string to be considered.
     * @param t the second string to be considered.
     * @return the single character that was added to the second string.
     */
    public static char solution(String s, String t) {
        int[] mem = new int[26];
        for (int i = 0; i < s.length(); i++) {
            char temp = s.charAt(i);
            mem[temp - 'a']++;
        }
        for (int j = 0; j < t.length(); j++) {
            char temp = t.charAt(j);
            if (mem[temp - 'a'] == 0) {
                return temp;
            } else {
                mem[temp - 'a']--;
            }
        }
        return 'a';
    }
    /**
     * This is my another solution using bit manipulation, the idea is adopted from the
     * single number question.
     * @param s the first string to be considered.
     * @param t the second string to be considered.
     * @return the single character that was added to the second string.
     */
    public static char solution2(String s, String t) {
        String sum = s.concat(t);
        char result = sum.charAt(0);
        for (int i = 1; i < sum.length(); i++) {
            result ^= sum.charAt(i);
        }
        return result;
    }
    /**
     * This is the test function for this question.
     * @param args
     */
    public static void main(String[] args) {
        // TODO Auto-generated method stub
        String s = "bb";
        String t = "bbb";
        char result = FindTheDifference.solution(s, t);
        System.out.println(result);
    }

}
